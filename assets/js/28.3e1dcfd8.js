(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{462:function(v,_,e){v.exports=e.p+"assets/img/middle.875c1194.png"},545:function(v,_,e){"use strict";e.r(_);var s=e(2),o=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"使用一个-node-中间件解决前端跨越问题"}},[v._v("使用一个 Node 中间件解决前端跨越问题")]),v._v(" "),_("p",[v._v("用 node 写一个前端跨域的中间件")]),v._v(" "),_("h2",{attrs:{id:"模拟一个-v8-引擎解析器"}},[v._v("模拟一个 V8 引擎解析器")]),v._v(" "),_("h2",{attrs:{id:"构建工具的优势"}},[v._v("构建工具的优势")]),v._v(" "),_("p",[v._v("在现代使用现代框架时，都会基于一个构建工具协助开发和打包编译，使用构建工具有以下优势：")]),v._v(" "),_("ul",[_("li",[v._v("可以方便使用现代框架，例如 Vue、React 等。")]),v._v(" "),_("li",[v._v("可以使用 ES 的 export 等特性进行模块化管理，抽离模块、组件并交给构建工具打包处理。")]),v._v(" "),_("li",[v._v("优化代码体积，利用打包工具的 tree-skaking 特性移除无用代码，懒加载和 Chunk 分割，对代码进行压缩。")]),v._v(" "),_("li",[v._v("对海量的 npm 包支持开箱即用，构建工具负责按需抽离合并。")]),v._v(" "),_("li",[v._v("可以使用 CSS 等 Sass、less 等预处理器，提高 Css 的开发效率。")]),v._v(" "),_("li",[v._v("对 TypeScript 的友好支持，开发工具进行编译处理。")]),v._v(" "),_("li",[v._v("可以使用 ESlint、StyleLint 等代码风格校验、git hooks 工具。")])]),v._v(" "),_("h2",{attrs:{id:"node-版本的知识点"}},[v._v("Node 版本的知识点")]),v._v(" "),_("p",[v._v("node 的版本有 LTS 和 Current 之分，并且拥有不同的版本号。")]),v._v(" "),_("p",[v._v("current 版本是最新发布版本，里面包含这个版本系列的最新功能，但是有些功能需求完善或者修复做兼容处理。")]),v._v(" "),_("p",[v._v("node 每 6 个月就会发布一次 Current 版本，其中新偶数版本每年 4 月份发布，奇数版本每年的 10 月份发布。每个版本会在这个阶段持续活跃 6 个月，期间进行维护和更新。但是满 6 个月以后将有以下区别：")]),v._v(" "),_("ul",[_("li",[v._v("其中如果大版本是奇数，将不再进行支持，不会进入到 LTS 版本阶段。")]),v._v(" "),_("li",[v._v("如果大版本是偶数，则进行到 LTS 阶段，并且作为活跃的稳定版投入使用。")])]),v._v(" "),_("p",[v._v("LTS 版本，全程 Long Time Support 即长期维护版本。每个 LTS 版本大概会进行长达 30 个月的维护时间，其中会经历 Active 阶段（大约是 18 个月）进行积极维护和升级，然后经历 Maintenance 阶段（大约 12 个月）进行错误修复和安全补丁。")]),v._v(" "),_("h2",{attrs:{id:"关于-package-json-中的-type"}},[v._v("关于 package.json 中的 Type")]),v._v(" "),_("p",[_("code",[v._v("package.json")]),v._v("中的 type 字段是关于模块规范的定义，有两个值可供选择"),_("code",[v._v("commonjs")]),v._v("和"),_("code",[v._v("module")]),v._v("，其中"),_("code",[v._v("commonjs")]),v._v("是默认值。")]),v._v(" "),_("ul",[_("li",[v._v("当设置为"),_("code",[v._v("commonjs")]),v._v("时，拓展名称为"),_("code",[v._v(".js")]),v._v("和"),_("code",[v._v(".cj")]),v._v("的文件都是"),_("code",[v._v("commonjs")]),v._v("规范的模块，如果要使用"),_("code",[v._v("ES Module")]),v._v("规范，则需要使用"),_("code",[v._v(".mjs")]),v._v("为拓展名。")]),v._v(" "),_("li",[v._v("当设置为"),_("code",[v._v("module")]),v._v("时，拓展名称为"),_("code",[v._v(".js")]),v._v("和"),_("code",[v._v(".mjs")]),v._v("的文件都是"),_("code",[v._v("ES Module")]),v._v("规范的模块，如果使用"),_("code",[v._v("commonjs")]),v._v("规范，则需要使用"),_("code",[v._v(".mjs")]),v._v("作为拓展名.")])]),v._v(" "),_("p",[v._v("更多信息，请参考"),_("a",{attrs:{href:"https://docs.npmjs.com/cli/v8/configuring-npm/package-json",target:"_blank",rel:"noopener noreferrer"}},[v._v("npm Docs"),_("OutboundLink")],1)]),v._v(" "),_("h2",{attrs:{id:"require资源加载规则"}},[v._v("require资源加载规则")]),v._v(" "),_("p",[_("code",[v._v("require")]),v._v("加载模块资源时的规则一般如下：")]),v._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" demo1 "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("'./utils'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" demo2 "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("'/utils'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" demo3 "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("'utils'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br")])]),_("ul",[_("li",[v._v("如果参数是以"),_("code",[v._v("/")]),v._v("开头，则表明需要加载的是一个绝对路径文件；")]),v._v(" "),_("li",[v._v("如果参数是以"),_("code",[v._v("./")]),v._v("开头，表明需要加载的是一个相对路径文件；")]),v._v(" "),_("li",[v._v("如果参数不是以"),_("code",[v._v("/")]),v._v("或"),_("code",[v._v("./")]),v._v("开头，则表明加载的是一个核心模块或者当前项目中"),_("code",[v._v("node_modules")]),v._v("文件夹下的模块；")]),v._v(" "),_("li",[v._v("如果没有找到指定的模块文件，"),_("code",[v._v("Node.js")]),v._v("则会尝试自动添加"),_("code",[v._v(".js")]),v._v("、"),_("code",[v._v(".json")]),v._v("、"),_("code",[v._v(".node")]),v._v("后缀，再去搜索文件。")]),v._v(" "),_("li",[v._v("如果传入"),_("code",[v._v("require")]),v._v("的参数是一个目录，则"),_("code",[v._v("node.js")]),v._v("会自动读取该目录下面的"),_("code",[v._v("package.json")]),v._v("文件，并根据该文件的main字段来加载真正的入口文件。如果该目录下没有"),_("code",[v._v("package.json")]),v._v("文件，则会尝试加载该目录下的"),_("code",[v._v("index")]),v._v("文件，并根据后缀优先级查找文件。")])]),v._v(" "),_("h2",{attrs:{id:"koa与express的主要差别"}},[v._v("Koa与Express的主要差别")]),v._v(" "),_("p",[v._v("首先"),_("code",[v._v("Koa")]),v._v("与"),_("code",[v._v("Express")]),v._v("是由一个开发团队打造的。")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Koa")]),v._v("使用了"),_("code",[v._v("Promise")]),v._v("、"),_("code",[v._v("async/await")]),v._v("语法来进行异步编程，从根本上解决了传统"),_("code",[v._v("Node.js")]),v._v("异步编程风格存在的问题。")]),v._v(" "),_("li",[_("code",[v._v("express")]),v._v("是基于事件和回调的，这会产生多层回调嵌套的问题，造成回调地狱，不利于代码维护")]),v._v(" "),_("li",[_("code",[v._v("Koa")]),v._v("核心不绑定任何中间件，因此"),_("code",[v._v("Koa")]),v._v("核心更纯净。")])]),v._v(" "),_("h2",{attrs:{id:"中间件的一般作用"}},[v._v("中间件的一般作用")]),v._v(" "),_("ul",[_("li",[v._v("执行逻辑代码；")]),v._v(" "),_("li",[v._v("更改请求或响应对象；")]),v._v(" "),_("li",[v._v("结束请求-响应周期；")]),v._v(" "),_("li",[v._v("调用下一个中间件；")]),v._v(" "),_("li",[v._v("错误处理；")]),v._v(" "),_("li",[v._v("都需要调用next,来将执行权限交个下一个中间件；")]),v._v(" "),_("li",[v._v("如果发起一个请求，任何中间件都没有输出响应，在"),_("code",[v._v("Koa")]),v._v("中此次请求将返回404状态码，而在"),_("code",[v._v("Express")]),v._v("中请求将被挂起。造成这种差别的原因是"),_("code",[v._v("Koa")]),v._v("使用的是"),_("code",[v._v("Promise")]),v._v("来进行异步编程的，不需要执行回调函数（直接对body进行赋值即可），而"),_("code",[v._v("Express")]),v._v("则需要手动执行回调函数。")])]),v._v(" "),_("h2",{attrs:{id:"koa中间件的洋葱模型"}},[v._v("Koa中间件的洋葱模型")]),v._v(" "),_("p",[_("code",[v._v("Koa")]),v._v("的洋葱模型是以"),_("code",[v._v("next()")]),v._v("函数为分割点，先由外到内执行"),_("code",[v._v("Request")]),v._v("的逻辑，然后再由内到外执行"),_("code",[v._v("Response")]),v._v("的逻辑，这里的"),_("code",[v._v("request")]),v._v("的逻辑，我们可以理解为是"),_("code",[v._v("next")]),v._v("之前的内容，"),_("code",[v._v("response")]),v._v("的逻辑是"),_("code",[v._v("next")]),v._v("函数之后的内容，也可以说每一个中间件都有两次处理时机。洋葱模型的核心原理主要是借助"),_("code",[v._v("compose")]),v._v("方法。")]),v._v(" "),_("p",[v._v("在一个"),_("code",[v._v("app")]),v._v("里面有很多中间件，有些中间件需要依赖其他中间件的结果，用葱模型可以保证执行顺序。")]),v._v(" "),_("p",[_("img",{attrs:{src:e(462),alt:"洋葱模型"}})])])}),[],!1,null,null,null);_.default=o.exports}}]);